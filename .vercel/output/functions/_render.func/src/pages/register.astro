---
import AuthForm from "@components/AuthForm.astro";
import PageLayout from "@layouts/PageLayout.astro";
---

<PageLayout title="Registro">
	<main
		class="auth-page"
		style="background-image: url(/ZeroTwo.jpg)"
	>
		<div class="overlay"></div>
		<div class="content">
			<h1>Crear Cuenta</h1>
			<AuthForm mode="register" />
			<p class="login-link">
				¿Ya tienes cuenta? <a href="/login">Inicia sesión</a>
			</p>
		</div>
	</main>
</PageLayout>

<style>
	.auth-page {
		min-height: 100vh;
		display: flex;
		align-items: center;
		justify-content: center;
		background-size: cover;
		background-position: center;
		position: relative;
	}

	.overlay {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: rgba(0, 0, 0, 0.7);
	}

	.content {
		position: relative;
		z-index: 1;
		width: 100%;
		max-width: 600px;
		padding: 2rem;
		color: white;
		text-align: center;
	}

	h1 {
		font-size: 2.5rem;
		margin-bottom: 1.5rem;
	}

	.login-link {
		margin-top: 1.5rem;
		color: #ddd;
	}

	.login-link a {
		color: #3498db;
		text-decoration: none;
	}

	.login-link a:hover {
		text-decoration: underline;
	}
	@media (max-width: 768px) {
		.content {
			padding: 1rem;
		}

		h1 {
			font-size: 2rem;
			margin-bottom: 1rem;
		}

		.auth-page {
			padding: 1rem;
		}
	}

	@media (max-width: 480px) {
		.content {
			padding: 0.5rem;
		}

		h1 {
			font-size: 1.5rem;
		}

		.login-link,
		.register-link {
			font-size: 0.9rem;
		}
	}
</style>

<script is:inline>
	document.addEventListener("DOMContentLoaded", () => {
		const form = document.getElementById("register-form");
		const usersKey = "animeAppUsers";

		form.addEventListener("submit", (e) => {
			e.preventDefault();
			clearErrors();

			// Obtener valores
			const bannerUrl = document.getElementById("banner-url").value;
			const avatarUrl = document.getElementById("avatar-url").value;
			const username = document.getElementById("username").value.trim();
			const password = document.getElementById("password").value;
			const confirmPassword =
				document.getElementById("confirm-password").value;

			// Validaciones
			let isValid = true;

			if (!isValidUrl(bannerUrl)) {
				showError(
					"banner-error",
					"Ingresa una URL válida para el banner"
				);
				isValid = false;
			}

			if (!isValidUrl(avatarUrl)) {
				showError(
					"avatar-error",
					"Ingresa una URL válida para el avatar"
				);
				isValid = false;
			}

			if (username.length < 3) {
				showError(
					"username-error",
					"El usuario debe tener al menos 3 caracteres"
				);
				isValid = false;
			}

			if (password.length < 6) {
				showError(
					"password-error",
					"La contraseña debe tener al menos 6 caracteres"
				);
				isValid = false;
			}

			if (password !== confirmPassword) {
				showError("confirm-error", "Las contraseñas no coinciden");
				isValid = false;
			}

			// Verificar si el usuario ya existe
			const users = JSON.parse(localStorage.getItem(usersKey)) || [];
			if (users.some((user) => user.username === username)) {
				showError("username-error", "Este usuario ya está registrado");
				isValid = false;
			}

			if (isValid) {
				// Guardar usuario
				const newUser = {
					bannerUrl,
					avatarUrl,
					username,
					password, 
					createdAt: new Date().toISOString(),
				};

				users.push(newUser);
				localStorage.setItem(usersKey, JSON.stringify(users));

				// Guardar sesión y redirigir
				localStorage.setItem(
					"animeAppCurrentUser",
					JSON.stringify({
						username,
						avatarUrl,
						bannerUrl,
					})
				);

				window.location.href = "/";
			}
		});

		function isValidUrl(string) {
			try {
				new URL(string);
				return true;
			} catch (_) {
				return false;
			}
		}

		function showError(id, message) {
			const element = document.getElementById(id);
			element.textContent = message;
			element.style.display = "block";
		}

		function clearErrors() {
			document.querySelectorAll(".error-message").forEach((el) => {
				el.textContent = "";
				el.style.display = "none";
			});
		}
	});
</script>
